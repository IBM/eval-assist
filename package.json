{
    "name": "eval-assist",
    "private": false,
    "scripts": {
        "prepare": "backend/venv/bin/python3 -m pip install pre-commit && backend/venv/bin/pre-commit install",
        "install:backend": "npm run check:python && cd backend && python3 -m venv venv && venv/bin/python3 -m pip install --upgrade pip setuptools wheel && venv/bin/python3 -m pip install -r requirements/dev.txt && venv/bin/python3 -m pip freeze > requirements.lock",
        "install:frontend": "cd frontend && npm install",
        "install": "concurrently --kill-others-on-fail \"npm run install:backend\" \"npm run install:frontend\"",
        "start:backend": "cd backend && venv/bin/python3 run.py",
        "_start:frontend": "wait-on -t 120s http-get://$(echo $NEXT_PUBLIC_BACKEND_API_HOST | sed 's/^http:\\/\\///')/health && cd frontend && npm run dev",
        "start:frontend": "dotenv -e .env -- npm run _start:frontend",
        "start": "npm run prisma && concurrently \"npm run start:backend\" \"npm run start:frontend\"",
        "prisma:prepare:backend": "node shared/scripts/mergePrisma.js backend",
        "prisma:prepare:frontend": "node shared/scripts/mergePrisma.js frontend",
        "prisma:prepare": "concurrently \"npm run prisma:prepare:frontend\" \"npm run prisma:prepare:backend\"",
        "prisma:generate:backend": "cd backend && venv/bin/prisma generate",
        "prisma:generate:frontend": "cd frontend && npx prisma generate",
        "prisma:generate": "npm run prisma:generate:frontend && npm run prisma:generate:backend",
        "prisma:sync": "backend/venv/bin/python3 -m prisma migrate dev --schema shared/prisma/schema.base.prisma",
        "prisma": "npm run prisma:prepare && npm run prisma:generate",
        "db": "cd shared/localdb/ && docker-compose -f postgres.yml up -d",
        "pre-commit:backend": "backend/venv/bin/pre-commit run --all-files",
        "pre-commit:frontend": "cd frontend && npm run pre-commit",
        "pre-commit": "concurrently \"npm run pre-commit:backend\" \"npm run pre-commit:frontend\"",
        "clean:frontend": "rimraf frontend/node_modules frontend/prisma/schema.prisma",
        "clean:backend": "rimraf backend/venv backend/prisma/schema.prisma ",
        "clean": "concurrently \"npm run clean:frontend\" \"npm run clean:backend\" && rimraf node_modules",
        "check:python": "python3 shared/scripts/check_python_version.py"
    },
    "devDependencies": {
        "concurrently": "^8.2.2",
        "dotenv-cli": "^8.0.0",
        "rimraf": "^6.0.1",
        "wait-on": "^8.0.2"
    }
}
