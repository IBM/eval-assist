{
    "name": "eval-assist",
    "private": false,
    "scripts": {
        "install:backend": "cd backend && python3 -m venv venv && source venv/bin/activate && pip install --upgrade pip setuptools wheel && pip install -r requirements/dev.txt && deactivate",
        "install:frontend": "cd frontend && npm install",
        "install": "concurrently \"npm run install:backend\" \"npm run install:frontend\"",
        "start:backend": "cd backend && source venv/bin/activate && python3 run.py",
        "_start:frontend": "dotenv -e .env -- wait-on http-get://$(echo $NEXT_PUBLIC_BACKEND_API_HOST | sed 's/^http:\\/\\///')/health && cd frontend && npm run dev",
        "start:frontend": "dotenv -e .env -- npm run _start:frontend",
        "start": "npm run prisma && concurrently \"npm run start:backend\" \"npm run start:frontend\"",
        "prisma:prepare:frontend": "rm -f frontend/prisma/schema.prisma && cat frontend/prisma/generator.prisma shared/prisma/schema.base.prisma > frontend/prisma/schema.prisma",
        "prisma:prepare:backend": "rm -f backend/prisma/schema.prisma && cat backend/prisma/generator.prisma shared/prisma/schema.base.prisma > backend/prisma/schema.prisma",
        "prisma:prepare": "concurrently \"npm run prisma:prepare:frontend\" \"npm run prisma:prepare:backend\"",
        "prisma:generate:frontend": "cd frontend && npx prisma generate",
        "prisma:generate:backend": "cd backend && source venv/bin/activate && prisma generate",
        "prisma:generate": "concurrently \"npm run prisma:generate:frontend\" \"npm run prisma:generate:backend\"",
        "prisma:sync": "source backend/venv/bin/activate && cd shared/prisma && prisma migrate dev --schema schema.base.prisma && deactivate",
        "prisma": "npm run prisma:prepare && npm run prisma:generate",
        "db": "cd shared/localdb/ && docker-compose -f postgres.yml up -d"
    },
    "devDependencies": {
        "concurrently": "^8.0.0",
        "dotenv-cli": "^8.0.0",
        "wait-on": "^8.0.2"
    }
}
